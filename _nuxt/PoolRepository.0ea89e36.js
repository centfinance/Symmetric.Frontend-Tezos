var I=Object.defineProperty;var E=(e,i,a)=>i in e?I(e,i,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[i]=a;var v=(e,i,a)=>(E(e,typeof i!="symbol"?i+"":i,a),a);import{m,l as F,x as k,L as V,v as K,p as r,T as W,s as J,aC as Y,ai as X,aj as Z,q as ee,aD as ne,a as ae,aw as T,j as te,e as h,at as p,o as ie,f as le,h as P,w as oe,i as S,u as z,aE as se,aF as de,aG as re,aH as ue,aI as ce,aJ as D,ay as L,a3 as me}from"./entry.a2878074.js";import{a as _e}from"./approve.5045382b.js";import{n as ke,g as ve,P as b,a as U}from"./Pool.85d0db27.js";import{B as pe}from"./taquito.es6.a358f22a.js";const ge={ratio:[String,Number]};function fe(e,i){return m(()=>{const a=Number(e.ratio||(i!==void 0?i.value:void 0));return isNaN(a)!==!0&&a>0?{paddingBottom:`${100/a}%`}:null})}const he=16/9,ze=F({name:"QImg",props:{...ge,src:String,srcset:String,sizes:String,alt:String,crossorigin:String,decoding:String,referrerpolicy:String,draggable:Boolean,loading:{type:String,default:"lazy"},fetchpriority:{type:String,default:"auto"},width:String,height:String,initialRatio:{type:[Number,String],default:he},placeholderSrc:String,fit:{type:String,default:"cover"},position:{type:String,default:"50% 50%"},imgClass:String,imgStyle:Object,noSpinner:Boolean,noNativeMenu:Boolean,noTransition:Boolean,spinnerColor:String,spinnerSize:String},emits:["load","error"],setup(e,{slots:i,emit:a}){const d=k(e.initialRatio),t=fe(e,d);let n=null,u=!1;const o=[k(null),k(w())],l=k(0),c=k(!1),_=k(!1),y=m(()=>`q-img q-img--${e.noNativeMenu===!0?"no-":""}menu`),A=m(()=>({width:e.width,height:e.height})),G=m(()=>`q-img__image ${e.imgClass!==void 0?e.imgClass+" ":""}q-img__image--with${e.noTransition===!0?"out":""}-transition`),H=m(()=>({...e.imgStyle,objectFit:e.fit,objectPosition:e.position}));V(()=>x(),q);function x(){return e.src||e.srcset||e.sizes?{src:e.src,srcset:e.srcset,sizes:e.sizes}:null}function w(){return e.placeholderSrc!==void 0?{src:e.placeholderSrc}:null}function q(s){n!==null&&(clearTimeout(n),n=null),_.value=!1,s===null?(c.value=!1,o[l.value^1].value=w()):c.value=!0,o[l.value].value=s}function M({target:s}){u!==!0&&(n!==null&&(clearTimeout(n),n=null),d.value=s.naturalHeight===0?.5:s.naturalWidth/s.naturalHeight,C(s,1))}function C(s,g){u===!0||g===1e3||(s.complete===!0?j(s):n=setTimeout(()=>{n=null,C(s,g+1)},50))}function j(s){u!==!0&&(l.value=l.value^1,o[l.value].value=null,c.value=!1,_.value=!1,a("load",s.currentSrc||s.src))}function O(s){n!==null&&(clearTimeout(n),n=null),c.value=!1,_.value=!0,o[l.value].value=null,o[l.value^1].value=w(),a("error",s)}function B(s){const g=o[s].value,f={key:"img_"+s,class:G.value,style:H.value,crossorigin:e.crossorigin,decoding:e.decoding,referrerpolicy:e.referrerpolicy,height:e.height,width:e.width,loading:e.loading,fetchpriority:e.fetchpriority,"aria-hidden":"true",draggable:e.draggable,...g};return l.value===s?(f.class+=" q-img__image--waiting",Object.assign(f,{onLoad:M,onError:O})):f.class+=" q-img__image--loaded",r("div",{class:"q-img__container absolute-full",key:"img"+s},r("img",f))}function Q(){return c.value!==!0?r("div",{key:"content",class:"q-img__content absolute-full q-anchor--skip"},J(i[_.value===!0?"error":"default"])):r("div",{key:"loading",class:"q-img__loading absolute-full flex flex-center"},i.loading!==void 0?i.loading():e.noSpinner===!0?void 0:[r(Y,{color:e.spinnerColor,size:e.spinnerSize})])}return q(x()),K(()=>{u=!0,n!==null&&(clearTimeout(n),n=null)}),()=>{const s=[];return t.value!==null&&s.push(r("div",{key:"filler",style:t.value})),_.value!==!0&&(o[0].value!==null&&s.push(B(0)),o[1].value!==null&&s.push(B(1))),s.push(r(W,{name:"q-transition--fade"},Q)),r("div",{class:y.value,style:A.value,role:"img","aria-label":e.alt},s)}}}),Ue=F({name:"QAvatar",props:{...X,fontSize:String,color:String,textColor:String,icon:String,square:Boolean,rounded:Boolean},setup(e,{slots:i}){const a=Z(e),d=m(()=>"q-avatar"+(e.color?` bg-${e.color}`:"")+(e.textColor?` text-${e.textColor} q-chip--colored`:"")+(e.square===!0?" q-avatar--square":e.rounded===!0?" rounded-borders":"")),t=m(()=>e.fontSize?{fontSize:e.fontSize}:null);return()=>{const n=e.icon!==void 0?[r(ee,{name:e.icon})]:void 0;return r("div",{class:d.value,style:a.value},[r("div",{class:"q-avatar__content row flex-center overflow-hidden",style:t.value},ne(i.default,n))])}}}),ye={class:"bg-black text-white no-wrap p-4"},we={class:"col"},be=S("div",{class:"text-h7 font-bold q-mb-md"},"Slippage Tolerance",-1),$e=ae({__name:"SetSlippage",async setup(e){let i,a;const d=([i,a]=T(()=>te().getDAppClient()),i=await i,a(),i),t=([i,a]=T(()=>d.getActiveAccount()),i=await i,a(),i),n=h(p).find(t.address);console.log(t),n||h(p).save({id:t.address,walletKey:t.walletKey,lastConnected:t.connectedAt,slippage:"0.5"});const u=m(()=>h(p).find(t.address).slippage),o=l=>{l&&h(p).save({id:t==null?void 0:t.address,slippage:l})};return(l,c)=>{const _=_e,y=se;return ie(),le("div",null,[P(y,{dark:"",outline:"",dense:"","dropdown-icon":"none",icon:"tune",class:"tx-settings",color:"orange",label:`${z(u)}%`},{default:oe(()=>[S("div",ye,[S("div",we,[be,P(_,{dark:"",outlined:"",autofocus:"","model-value":z(u),color:"orange",suffix:"%",mask:"#.##","input-class":"focus:ring-0 focus:ring-offset-0","onUpdate:modelValue":o},null,8,["model-value"])])])]),_:1},8,["label"])])}}});const Se=[r("g",[r("path",{fill:"none",stroke:"currentColor","stroke-width":"5","stroke-miterlimit":"10",d:"M58.4,51.7c-0.9-0.9-1.4-2-1.4-2.3s0.5-0.4,1.4-1.4 C70.8,43.8,79.8,30.5,80,15.5H70H30H20c0.2,15,9.2,28.1,21.6,32.3c0.9,0.9,1.4,1.2,1.4,1.5s-0.5,1.6-1.4,2.5 C29.2,56.1,20.2,69.5,20,85.5h10h40h10C79.8,69.5,70.8,55.9,58.4,51.7z"}),r("clipPath",{id:"uil-hourglass-clip1"},[r("rect",{x:"15",y:"20",width:" 70",height:"25"},[r("animate",{attributeName:"height",from:"25",to:"0",dur:"1s",repeatCount:"indefinite",values:"25;0;0",keyTimes:"0;0.5;1"}),r("animate",{attributeName:"y",from:"20",to:"45",dur:"1s",repeatCount:"indefinite",values:"20;45;45",keyTimes:"0;0.5;1"})])]),r("clipPath",{id:"uil-hourglass-clip2"},[r("rect",{x:"15",y:"55",width:" 70",height:"25"},[r("animate",{attributeName:"height",from:"0",to:"25",dur:"1s",repeatCount:"indefinite",values:"0;25;25",keyTimes:"0;0.5;1"}),r("animate",{attributeName:"y",from:"80",to:"55",dur:"1s",repeatCount:"indefinite",values:"80;55;55",keyTimes:"0;0.5;1"})])]),r("path",{d:"M29,23c3.1,11.4,11.3,19.5,21,19.5S67.9,34.4,71,23H29z","clip-path":"url(#uil-hourglass-clip1)",fill:"currentColor"}),r("path",{d:"M71.6,78c-3-11.6-11.5-20-21.5-20s-18.5,8.4-21.5,20H71.6z","clip-path":"url(#uil-hourglass-clip2)",fill:"currentColor"}),r("animateTransform",{attributeName:"transform",type:"rotate",from:"0 50 50",to:"180 50 50",repeatCount:"indefinite",dur:"1s",values:"0 50 50;0 50 50;180 50 50",keyTimes:"0;0.7;1"})])],De=F({name:"QSpinnerHourglass",props:de,setup(e){const{cSize:i,classes:a}=re(e);return()=>r("svg",{class:a.value,width:i.value,height:i.value,viewBox:"0 0 100 100",preserveAspectRatio:"xMidYMid",xmlns:"http://www.w3.org/2000/svg"},Se)}}),$={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetPool"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"indexer_pool"},arguments:[{kind:"Argument",name:{kind:"Name",value:"order_by"},value:{kind:"ObjectValue",fields:[{kind:"ObjectField",name:{kind:"Name",value:"total_liquidity"},value:{kind:"EnumValue",value:"desc"}}]}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"holders_count"}},{kind:"Field",name:{kind:"Name",value:"swaps_count"}},{kind:"Field",name:{kind:"Name",value:"swap_enabled"}},{kind:"Field",name:{kind:"Name",value:"address"}},{kind:"Field",name:{kind:"Name",value:"index"}},{kind:"Field",name:{kind:"Name",value:"factory"}},{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"owner"}},{kind:"Field",name:{kind:"Name",value:"create_time"}},{kind:"Field",name:{kind:"Name",value:"swap_fee"}},{kind:"Field",name:{kind:"Name",value:"total_liquidity"}},{kind:"Field",name:{kind:"Name",value:"total_shares"}},{kind:"Field",name:{kind:"Name",value:"total_swap_fee"}},{kind:"Field",name:{kind:"Name",value:"total_swap_volume"}},{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"pool_type"}},{kind:"Field",name:{kind:"Name",value:"symbol"}},{kind:"Field",name:{kind:"Name",value:"tokens_list"}},{kind:"Field",name:{kind:"Name",value:"pool_tokens"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"address"}},{kind:"Field",name:{kind:"Name",value:"balance"}},{kind:"Field",name:{kind:"Name",value:"index"}},{kind:"Field",name:{kind:"Name",value:"decimals"}},{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"symbol"}},{kind:"Field",name:{kind:"Name",value:"token_id"}},{kind:"Field",name:{kind:"Name",value:"weight"}},{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"pool_id"}},{kind:"Field",name:{kind:"Name",value:"pool_token_id"}},{kind:"Field",name:{kind:"Name",value:"token"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"fa2"}}]}}]}}]}}]}}]},Ne={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetToken"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"indexer_token"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"total_swap_count"}},{kind:"Field",name:{kind:"Name",value:"fa2"}},{kind:"Field",name:{kind:"Name",value:"address"}},{kind:"Field",name:{kind:"Name",value:"id"}},{kind:"Field",name:{kind:"Name",value:"latest_price_id"}},{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"pool_id"}},{kind:"Field",name:{kind:"Name",value:"symbol"}},{kind:"Field",name:{kind:"Name",value:"decimals"}},{kind:"Field",name:{kind:"Name",value:"latest_usd_price"}},{kind:"Field",name:{kind:"Name",value:"latest_usd_price_timestamp"}},{kind:"Field",name:{kind:"Name",value:"token_id"}},{kind:"Field",name:{kind:"Name",value:"total_balance_notional"}},{kind:"Field",name:{kind:"Name",value:"total_balance_usd"}},{kind:"Field",name:{kind:"Name",value:"total_volume_notional"}},{kind:"Field",name:{kind:"Name",value:"total_volume_usd"}}]}}]}}]},Fe={"\n  query GetPool {\n    indexer_pool(order_by: { total_liquidity: desc }) {\n      holders_count\n      swaps_count\n      swap_enabled\n      address\n      index\n      factory\n      id\n      owner\n      create_time\n      swap_fee\n      total_liquidity\n      total_shares\n      total_swap_fee\n      total_swap_volume\n      name\n      pool_type\n      symbol\n      tokens_list\n      pool_tokens {\n        address\n        balance\n        index\n        decimals\n        name\n        symbol\n        token_id\n        weight\n        id\n        pool_id\n        pool_token_id\n        token {\n          fa2\n        }\n      }\n    }\n  }\n":$,"\n      query GetPool {\n        indexer_pool(order_by: { total_liquidity: desc }) {\n          holders_count\n          swaps_count\n          swap_enabled\n          address\n          index\n          factory\n          id\n          owner\n          create_time\n          swap_fee\n          total_liquidity\n          total_shares\n          total_swap_fee\n          total_swap_volume\n          name\n          pool_type\n          symbol\n          tokens_list\n          pool_tokens {\n            address\n            balance\n            index\n            decimals\n            name\n            symbol\n            token_id\n            weight\n            id\n            pool_id\n            pool_token_id\n            token {\n              fa2\n            }\n          }\n        }\n      }\n    ":$,"\n      query GetToken {\n        indexer_token {\n          total_swap_count\n          fa2\n          address\n          id\n          latest_price_id\n          name\n          pool_id\n          symbol\n          decimals\n          latest_usd_price\n          latest_usd_price_timestamp\n          token_id\n          total_balance_notional\n          total_balance_usd\n          total_volume_notional\n          total_volume_usd\n        }\n      }\n    ":Ne};function R(e){return Fe[e]??{}}class N extends ue{static fields(){return{id:this.attr(null),total_swap_count:this.number(0),fa2:this.boolean(!0),address:this.string(""),name:this.string(""),symbol:this.string(""),decimals:this.number(18),token_id:this.number(0),total_balance_notional:this.number(0),total_balance_usd:this.number(0),total_volume_notional:this.number(0),total_volume_usd:this.number(0),userBalance:this.string("0"),icon:this.string(null)}}normalizedBalance(){return pe(this.userBalance).dividedBy(10**this.decimals).toString()}formatBalance(){return ke(this.normalizedBalance()).format({average:!0,totalLength:6})}}v(N,"entity","tokens"),v(N,"piniaOptions",{persist:ce.localStorage});class xe extends D{constructor(){super(...arguments);v(this,"use",N)}async fetch(){const a=R(`
      query GetToken {
        indexer_token {
          total_swap_count
          fa2
          address
          id
          latest_price_id
          name
          pool_id
          symbol
          decimals
          latest_usd_price
          latest_usd_price_timestamp
          token_id
          total_balance_notional
          total_balance_usd
          total_volume_notional
          total_volume_usd
        }
      }
    `),{pending:d,data:t,error:n}=await L(a);if(t.value&&t.value.indexer_token){const u=t.value.indexer_token.map(o=>{var l;return console.log(o.id),{id:o.id,total_swap_count:o.total_swap_count,fa2:o.fa2,address:o.address,name:o.name,symbol:o.symbol,decimals:o.decimals,token_id:o.token_id,total_balance_notional:o.total_balance_notional,total_balance_usd:o.total_balance_usd,total_volume_notional:o.total_volume_notional,total_volume_usd:o.total_volume_usd,icon:`/icons/${(l=o.symbol)==null?void 0:l.toUpperCase()}.png`}});this.save(u)}console.log(t.value)}async fetchUserBalances(a){const d=this.where("token_id",n=>!isNaN(Number(n))).get(),t=await ve(d,a);this.save(t.balances)}}class Le extends D{constructor(){super(...arguments);v(this,"use",b)}store(a){const d=[],t=a.indexer_pool.map(n=>{console.log(n);const u={id:n.id,swaps_count:n.swaps_count,address:n.address,poolId:n.index,factory:n.factory,owner:n.owner,create_time:n.create_time,name:n.name,symbol:n.symbol,pool_type:n.pool_type,swap_fee:n.swap_fee,tokens_list:n.tokens_list,total_swap_volume:n.total_swap_volume,total_swap_fee:n.total_swap_fee,total_liquidity:n.total_liquidity},o=n.pool_tokens.map(l=>{var c;return{id:l.id,address:l.address,balance:l.balance,index:l.index,name:l.name,symbol:l.symbol,decimals:l.decimals,token_id:l.token_id,weight:l.weight,pool_id:l.pool_id,pool_token_id:l.pool_token_id,FA2:l.token?l.token.fa2:!1,icon:`/icons/${(c=l.symbol)==null?void 0:c.toUpperCase()}.png`}});return d.push(...o),u});this.save(t),this.repo(U).save(d)}getPoolList(){return this.repo(b).has("pool_tokens",2).with("pool_tokens").where("factory",me.contracts.factory).get().map(d=>({composition:d.pool_tokens.map(t=>({symbol:t.symbol,weight:`${t.weight/(10*10**15)}%`})),total_liquidity:d.totalLiquidity(),total_swap_volume:d.total_swap_volume,address:d.address,icons:d.pool_tokens.map(t=>t.icon)}))}tvl(){let a=new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"});const t=this.repo(b).has("pool_tokens",2).with("pool_tokens").get().reduce((n,u)=>n+u.totalLiquidity(),0);return a.format(t)}async fetchPoolData(){const a=R(`
      query GetPool {
        indexer_pool(order_by: { total_liquidity: desc }) {
          holders_count
          swaps_count
          swap_enabled
          address
          index
          factory
          id
          owner
          create_time
          swap_fee
          total_liquidity
          total_shares
          total_swap_fee
          total_swap_volume
          name
          pool_type
          symbol
          tokens_list
          pool_tokens {
            address
            balance
            index
            decimals
            name
            symbol
            token_id
            weight
            id
            pool_id
            pool_token_id
            token {
              fa2
            }
          }
        }
      }
    `),{pending:d,data:t,error:n}=await L(a);t.value&&t.value.indexer_pool&&this.store(t.value);const u=this.repo(p).where("active",!0).first();u&&await this.repo(xe).fetchUserBalances(u.id)}async updateUserBalances(a,d){const t=await a.getUserBalances(d);this.repo(U).save(t)}async updateUserLPBalance(a,d){const t=await a.getUserLPBalance(d);this.save({id:a.id,userLPBalance:t})}async updatePoolShares(a){const d=await a.getPoolShares();this.save({id:a.id,pool_shares:d})}}export{Le as P,xe as T,ze as _,Ue as a,De as b,$e as c,N as d,R as g};
